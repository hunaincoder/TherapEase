<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Rosenberg Self-Esteem Scale</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      .result {
        margin-top: 2rem;
        padding: 1rem;
        border-radius: 0.5rem;
      }
      .low {
        background-color: #ffebee;
        border: 1px solid #f44336;
      }
      .moderate {
        background-color: #fff8e1;
        border: 1px solid #ffc107;
      }
      .high {
        background-color: #e8f5e9;
        border: 1px solid #4caf50;
      }
      .badge {
        display: inline-block;
        padding: 0.25rem 0.5rem;
        border-radius: 9999px;
        font-weight: bold;
        color: white;
      }
      .badge-1 {
        background-color: #f44336;
      }
      .badge-2 {
        background-color: #ff9800;
      }
      .badge-3 {
        background-color: #4caf50;
      }
    </style>
  </head>
  <body class="bg-gray-100 p-8">
    <div class="max-w-3xl mx-auto bg-white p-6 rounded-lg shadow-md">
      <h1 class="text-2xl font-bold mb-4">Rosenberg Self-Esteem Scale</h1>
      <p class="mb-4">
        Below is a list of statements dealing with your general feelings about
        yourself. Please indicate how strongly you agree or disagree with each
        statement by selecting the appropriate option.
      </p>
      <ul class="list-disc pl-5 mb-4">
        <li>SA = Strongly Agree</li>
        <li>A = Agree</li>
        <li>D = Disagree</li>
        <li>SD = Strongly Disagree</li>
      </ul>

      <form
        id="selfEsteemForm"
        onsubmit="event.preventDefault(); calculateScore()"
      >
        <div id="questionsContainer"></div>
        <button
          type="submit"
          class="mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
        >
          Submit
        </button>
      </form>

      <div id="results" class="result hidden">
        <h2 class="text-xl font-semibold">Your Self-Esteem Score</h2>
        <p><strong>Score:</strong> <span id="totalScore"></span> (out of 30)</p>
        <p><strong>Severity:</strong> <span id="severity"></span></p>
        <p><strong>Badge:</strong> <span id="badge"></span></p>
        <p>Higher scores indicate higher self-esteem.</p>
      </div>
    </div>

    <script>
      const questions = [
        { text: "On the whole, I am satisfied with myself.", reverse: false },
        { text: "At times, I think I am no good at all.", reverse: true },
        {
          text: "I feel that I have a number of good qualities.",
          reverse: false,
        },
        {
          text: "I am able to do things as well as most other people.",
          reverse: false,
        },
        { text: "I feel I do not have much to be proud of.", reverse: true },
        { text: "I certainly feel useless at times.", reverse: true },
        {
          text: "I feel that I'm a person of worth, at least on an equal plane with others.",
          reverse: false,
        },
        { text: "I wish I could have more respect for myself.", reverse: true },
        {
          text: "All in all, I am inclined to feel that I am a failure.",
          reverse: true,
        },
        { text: "I take a positive attitude toward myself.", reverse: false },
      ];
      
      const scaleName = "<%= recommendedScale %>";

      function createQuestionForm() {
        const container = document.getElementById("questionsContainer");

        questions.forEach((question, index) => {
          const questionDiv = document.createElement("div");
          questionDiv.className = "question mb-6";

          const questionText = document.createElement("p");
          questionText.className = "font-medium mb-2";
          questionText.textContent = `${index + 1}. ${question.text}`;
          questionDiv.appendChild(questionText);

          const radioGroup = document.createElement("div");
          radioGroup.className = "radio-group flex gap-4";

          const options = [
            { label: "SA", value: 3 },
            { label: "A", value: 2 },
            { label: "D", value: 1 },
            { label: "SD", value: 0 },
          ];

          options.forEach((option) => {
            const label = document.createElement("label");
            label.className = "inline-flex items-center";

            const radio = document.createElement("input");
            radio.type = "radio";
            radio.name = `q${index + 1}`;
            radio.value = question.reverse ? 3 - option.value : option.value;
            radio.className = "mr-2";
            radio.required = true;

            label.appendChild(radio);
            label.appendChild(document.createTextNode(option.label));
            radioGroup.appendChild(label);
          });

          questionDiv.appendChild(radioGroup);
          container.appendChild(questionDiv);
        });
      }

      async function calculateScore() {
        let totalScore = 0;

        for (let i = 1; i <= questions.length; i++) {
          const selected = document.querySelector(
            `input[name="q${i}"]:checked`
          );
          if (!selected) {
            alert(`Please answer question ${i}`);
            return;
          }
          totalScore += parseInt(selected.value);
        }

        let severity;
        let severityClass;
        let badge;
        let badgeClass;

        if (totalScore <= 14) {
          severity = "Low";
          severityClass = "low";
          badge = "1";
          badgeClass = "badge-1";
        } else if (totalScore >= 15 && totalScore <= 24) {
          severity = "Moderate";
          severityClass = "moderate";
          badge = "2";
          badgeClass = "badge-2";
        } else {
          severity = "High";
          severityClass = "high";
          badge = "3";
          badgeClass = "badge-3";
        }

        const resultsDiv = document.getElementById("results");
        resultsDiv.className = `result ${severityClass}`;

        document.getElementById("totalScore").textContent = totalScore;
        document.getElementById("severity").textContent = severity;

        const badgeSpan = document.getElementById("badge");
        badgeSpan.textContent = badge;
        badgeSpan.className = `badge ${badgeClass}`;

        try {
          const response = await fetch("/client/save-scale-results", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              scaleName: scaleName,
              totalScore,
              severity,
              badge,
            }),
          });

          const data = await response.json();

          if (!response.ok) {
            throw new Error(data.error || "Failed to save scale results");
          }

          window.location.href = data.redirect || "/client/patient-profile";
        } catch (error) {
          console.error("Error saving scale results:", error);
          alert(`Error: ${error.message}`);
        }
      }

      createQuestionForm();
    </script>
  </body>
</html>
