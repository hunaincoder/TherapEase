<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Mental Health Screening</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 20px;
      }
      .question {
        margin-bottom: 20px;
      }
      textarea {
        width: 100%;
        height: 80px;
      }
      button {
        padding: 10px 20px;
        margin-top: 20px;
      }
      #result {
        margin-top: 30px;
        font-weight: bold;
      }
    </style>
  </head>
  <body>
    <h1>Mental Health Screening</h1>
    <form id="screening-form">
      <div id="questions"></div>
      <button type="submit">Submit Answers</button>
    </form>

    <div id="result"></div>
    <script>
      async function loadQuestions() {
        try {
          const response = await fetch("http://localhost:8001/questions");
          if (!response.ok) throw new Error("Failed to load questions");
          const questions = await response.json();
          const questionsDiv = document.getElementById("questions");

          questions.forEach((q, index) => {
            const div = document.createElement("div");
            div.className = "question";
            div.innerHTML = `
            <label>${q.question}</label><br>
            <textarea name="q${index}" required></textarea>
          `;
            questionsDiv.appendChild(div);
          });
        } catch (error) {
          console.error("Error loading questions:", error);
          alert("Failed to load questions. Check console for details.");
        }
      }

      document
        .getElementById("screening-form")
        .addEventListener("submit", async (e) => {
          e.preventDefault();
          const formData = new FormData(e.target);
          const answers = {};

          const questionsResponse = await fetch(
            "http://localhost:8001/questions"
          );
          const questions = await questionsResponse.json();

          questions.forEach((q, index) => {
            answers[q.question] = formData.get(`q${index}`);
          });

          const resultDiv = document.getElementById("result");
          resultDiv.innerText = "Analyzing your answers...";

          try {
            const res = await fetch("http://localhost:8001/recommend-scale/", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(answers),
            });

            if (!res.ok)
              throw new Error(`API request failed with status ${res.status}`);

            const data = await res.json();
            console.log("Full response from recommend-scale:", data);

            if (data.error) {
              resultDiv.innerHTML = `
          <p style="color: red;">Error: ${data.error}</p>
          ${data.message ? `<p>${data.message}</p>` : ""}
          ${
            data.raw_response
              ? `<pre>Raw response: ${JSON.stringify(
                  data.raw_response,
                  null,
                  2
                )}</pre>`
              : ""
          }
        `;
              return;
            }

            if (
              data.recommendation &&
              data.recommendation.includes("General Counselor")
            ) {
              window.location.href = "Normal.html";
              return;
            }

            if (data.top_3 && Array.isArray(data.top_3)) {
              sessionStorage.setItem("topScales", JSON.stringify(data.top_3));
              console.log("Stored topScales in sessionStorage:", data.top_3);
              window.location.href = "/client/followup";
              return;
            }

            resultDiv.innerHTML = `
        <p>Received unexpected response format:</p>
        <pre>${JSON.stringify(data, null, 2)}</pre>
      `;
          } catch (error) {
            console.error("Submission error:", error);
            resultDiv.innerHTML = `
        <p style="color: red;">Error: ${error.message}</p>
        ${error.stack ? `<pre>${error.stack}</pre>` : ""}
      `;
          }
        });
      loadQuestions();
    </script>
  </body>
</html>
