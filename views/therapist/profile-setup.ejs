<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CV Upload & Parser</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            max-width: 1000px;
            margin: 0 auto;
        }
        input, textarea, button {
            margin: 10px 0;
            padding: 8px;
            width: 100%;
            box-sizing: border-box;
        }
        label {
            font-weight: bold;
            margin-top: 10px;
            display: block;
        }
        #fields {
            display: none;
            margin-top: 20px;
        }
        .education-entry, .work-experience-entry {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
            position: relative;
        }
        .education-entry input, .work-experience-entry input {
            display: inline-block;
            width: 30%;
            margin-right: 10px;
        }
        .education-entry button, .work-experience-entry button {
            display: inline-block;
            width: auto;
            padding: 5px 10px;
            background-color: #ff4444;
            color: white;
            border: none;
            cursor: pointer;
        }
        .add-btn {
            background-color: #4CAF50 !important;
            margin-bottom: 20px;
        }
        .wide-input {
            width: 100% !important;
            display: block !important;
        }
        #resultContainer {
            margin-top: 20px;
            padding: 10px;
            border: 1px solid #ccc;
        }
        .loading {
            display: none;
            margin: 10px 0;
            color: #666;
        }
        .error {
            color: red;
            margin: 10px 0;
        }
    </style>
</head>
<body>

    <h1>Upload Your CV</h1>

    <form id="upload-form">
        <input type="file" id="cv-file" name="file" accept=".pdf" required />
        <button type="submit">Upload CV</button>
        <div id="upload-loading" class="loading">Processing your CV, please wait...</div>
        <div id="upload-error" class="error"></div>
    </form>

    <div id="fields">
        <h2>Review & Edit Your Details</h2>
        <form id="submit-form">
            <!-- Hidden field to store therapist ID -->
            <input type="hidden" id="therapist_id" name="therapist_id" value="<%= therapist._id %>">

            <label>First Name</label>
            <input type="text" id="first_name" name="first_name" required class="wide-input" value="<%= therapist.firstName || '' %>" />

            <label>Last Name</label>
            <input type="text" id="last_name" name="last_name" required class="wide-input" value="<%= therapist.lastName || '' %>" />

            <label>Email</label>
            <input type="email" id="email" name="email" required class="wide-input" value="<%= therapist.email || '' %>" />

            <label>Phone Number</label>
            <input type="text" id="phone" name="phone" class="wide-input" value="<%= therapist.phone || '' %>" />

            <label>Address</label>
            <input type="text" id="address" name="address" class="wide-input" />

            <label>Education</label>
            <div id="education-container"></div>
            <button type="button" onclick="addEducationField()" class="add-btn">Add Another Education</button>

            <label>Certifications (comma-separated)</label>
            <input type="text" id="certifications" name="certifications" placeholder="e.g., CBT, DBT" class="wide-input" value="<%= therapist.certifications ? therapist.certifications.join(', ') : '' %>" />

            <label>Awards (comma-separated)</label>
            <input type="text" id="awards" name="awards" placeholder="e.g., Best Therapist 2023" class="wide-input" value="<%= therapist.awards ? therapist.awards.map(award => award.name).join(', ') : '' %>" />

            <label>Specialization (comma-separated)</label>
            <input type="text" id="specialization" name="specialization" placeholder="e.g., Anxiety, Addiction" class="wide-input" value="<%= therapist.specialties ? therapist.specialties.join(', ') : '' %>" />

            <label>Thesis</label>
            <input type="text" id="thesis" name="thesis" class="wide-input" />

            <label>Work Experience</label>
            <div id="work-experience-container"></div>
            <button type="button" onclick="addWorkExperienceField()" class="add-btn">Add Another Work Experience</button>

            <label>Skills (comma-separated)</label>
            <input type="text" id="skills" name="skills" placeholder="e.g., Communication, Empathy, CBT" class="wide-input" value="<%= therapist.services ? therapist.services.join(', ') : '' %>" />

            <input type="hidden" id="total_experience_years" name="total_experience_years" value="0">
            <input type="hidden" id="badge_level" name="badge_level" value="1">

            <button type="submit">Submit Final Info</button>
            <div id="submit-loading" class="loading">Saving your information...</div>
            <div id="submit-error" class="error"></div>
        </form>
    </div>

    <div id="resultContainer"></div>

    <script>
        const uploadForm = document.getElementById('upload-form');
        const submitForm = document.getElementById('submit-form');
        const fields = document.getElementById('fields');
        const resultContainer = document.getElementById('resultContainer');
        const uploadLoading = document.getElementById('upload-loading');
        const uploadError = document.getElementById('upload-error');
        const submitLoading = document.getElementById('submit-loading');
        const submitError = document.getElementById('submit-error');

        // Initialize with one empty field for each
        addEducationField();
        addWorkExperienceField();

        // Function to add education fields
        function addEducationField(degree = '', institution = '', year = '') {
            const container = document.getElementById('education-container');
            const index = container.children.length;

            const entryDiv = document.createElement('div');
            entryDiv.className = 'education-entry';
            entryDiv.innerHTML = `
                <input type="text" id="education_degree_${index}" placeholder="Degree" value="${degree}" class="wide-input">
                <input type="text" id="education_institution_${index}" placeholder="Institution" value="${institution}" class="wide-input">
                <input type="text" id="education_year_${index}" placeholder="Year" value="${year}" class="wide-input">
                <button type="button" onclick="this.parentElement.remove()">Remove</button>
            `;
            container.appendChild(entryDiv);
        }

        // Function to add work experience fields
        function addWorkExperienceField(jobTitle = '', company = '', startDate = '', endDate = '') {
            const container = document.getElementById('work-experience-container');
            const index = container.children.length;

            const entryDiv = document.createElement('div');
            entryDiv.className = 'work-experience-entry';
            entryDiv.innerHTML = `
                <input type="text" id="job_title_${index}" placeholder="Job Title" value="${jobTitle}" class="wide-input">
                <input type="text" id="company_${index}" placeholder="Company" value="${company}" class="wide-input">
                <input type="text" id="start_date_${index}" placeholder="Start Year (e.g., 2020)" value="${startDate}" class="wide-input">
                <input type="text" id="end_date_${index}" placeholder="End Year or 'Present' (e.g., 2022 or Present)" value="${endDate}" class="wide-input">
                <button type="button" onclick="this.parentElement.remove()">Remove</button>
            `;
            container.appendChild(entryDiv);
        }

        uploadForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            uploadError.textContent = '';
            uploadLoading.style.display = 'block';
            
            const formData = new FormData();
            formData.append('file', document.getElementById('cv-file').files[0]);

            try {
                const response = await fetch('http://127.0.0.1:8000/upload-cv/', {
                    method: 'POST',
                    body: formData,
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.detail || 'Failed to upload CV');
                }

                const data = await response.json();
                console.log("CV data received:", data);

                // Clear existing dynamic fields
                document.getElementById('education-container').innerHTML = '';
                document.getElementById('work-experience-container').innerHTML = '';

                document.getElementById('first_name').value = data["First Name"] || document.getElementById('first_name').value;
                document.getElementById('last_name').value = data["Last Name"] || document.getElementById('last_name').value;
                document.getElementById('email').value = data["Email"] || document.getElementById('email').value;
                document.getElementById('phone').value = data["Phone Number"] || document.getElementById('phone').value;
                document.getElementById('address').value = data["Address"] || "";
                document.getElementById('certifications').value = data["Certifications"]?.join(", ") || document.getElementById('certifications').value;
                document.getElementById('awards').value = data["Awards"]?.join(", ") || document.getElementById('awards').value;
                document.getElementById('specialization').value = data["Specialization"]?.join(", ") || document.getElementById('specialization').value;
                document.getElementById('thesis').value = data["Thesis"] || "";
                document.getElementById('skills').value = data["Skills"]?.join(", ") || document.getElementById('skills').value;

                if (data["Education"] && data["Education"].length > 0) {
                    data["Education"].forEach(edu => {
                        addEducationField(edu.Degree || "", edu.Institution || "", edu.Year || "");
                    });
                } else {
                    addEducationField();
                }

                if (data["Work Experience"] && data["Work Experience"].length > 0) {
                    data["Work Experience"].forEach(exp => {
                        addWorkExperienceField(
                            exp["Job Title"] || "",
                            exp["Company"] || "",
                            exp["Start Date"] || "",
                            exp["End Date"] || ""
                        );
                    });
                } else {
                    addWorkExperienceField(); 
                }

                fields.style.display = 'block';
            } catch (error) {
                console.error("Upload error:", error);
                uploadError.textContent = error.message;
            } finally {
                uploadLoading.style.display = 'none';
            }
        });

        submitForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            submitError.textContent = '';
            submitLoading.style.display = 'block';
            
            try {
                const educationEntries = [];
                const educationDivs = document.querySelectorAll('#education-container .education-entry');
                educationDivs.forEach(div => {
                    educationEntries.push({
                        Degree: div.querySelector('[id^="education_degree_"]').value,
                        Institution: div.querySelector('[id^="education_institution_"]').value,
                        Year: div.querySelector('[id^="education_year_"]').value
                    });
                });

                const workExperienceEntries = [];
                const workDivs = document.querySelectorAll('#work-experience-container .work-experience-entry');
                let totalExperienceYears = 0;
                const currentYear = new Date().getFullYear();

                function parseYear(dateStr) {
                    if (!dateStr) return null;
                    const yearMatch = dateStr.match(/(\d{4})/);
                    return yearMatch ? parseInt(yearMatch[1]) : null;
                }

                workDivs.forEach(div => {
                    const startDateStr = div.querySelector('[id^="start_date_"]').value;
                    const endDateStr = div.querySelector('[id^="end_date_"]').value;
                    
                    workExperienceEntries.push({
                        "Job Title": div.querySelector('[id^="job_title_"]').value,
                        "Company": div.querySelector('[id^="company_"]').value,
                        "Start Date": startDateStr,
                        "End Date": endDateStr
                    });

                    const startYear = parseYear(startDateStr);
                    let endYear = parseYear(endDateStr);

                    if (startYear) {
                        if (endDateStr.toLowerCase().includes("present") || !endYear) {
                            endYear = currentYear;
                        }

                        if (endYear && endYear >= startYear) {
                            totalExperienceYears += (endYear - startYear);
                        }
                    }
                });

                let badgeLevel = 1;
                if (totalExperienceYears >= 5) {
                    badgeLevel = 3;
                } else if (totalExperienceYears >= 3) {
                    badgeLevel = 2;
                }

                document.getElementById('total_experience_years').value = totalExperienceYears;
                document.getElementById('badge_level').value = badgeLevel;

                const formData = new FormData(submitForm);
                formData.set('education', JSON.stringify(educationEntries));
                formData.set('work_experience', JSON.stringify(workExperienceEntries));

                for (let [key, value] of formData.entries()) {
                    console.log(key, value);
                }

                const response = await fetch('http://127.0.0.1:8000/submit-cv/', {
                    method: 'POST',
                    body: formData,
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.detail || 'Failed to submit CV');
                }

                const result = await response.json();
                console.log("Submission result:", result);

                resultContainer.innerHTML = `
                    <h2>Submission Successful!</h2>
                    <p>${result.message || ''}</p>
                    <p>Total Years of Experience: ${totalExperienceYears}</p>
                    <p>Badge Level: ${badgeLevel}</p>
                `;
                fields.style.display = 'none';

                // Redirect to registration-complete page after successful submission
                window.location.href = '/therapist/registration-complete';
            } catch (error) {
                console.error("Submission error:", error);
                submitError.textContent = error.message;
            } finally {
                submitLoading.style.display = 'none';
            }
        });
    </script>
</body>
</html>